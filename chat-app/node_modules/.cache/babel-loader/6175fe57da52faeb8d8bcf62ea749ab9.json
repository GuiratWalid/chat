{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Walid\\\\Documents\\\\Real time chat application using MERN stack\\\\chat-app\\\\src\\\\pages\\\\SetAvatar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Loader from '../assets/Loader.gif';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { SetAvatarRoute } from '../utils/APIRoutes';\nimport Container from '../styled-components/Container';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport toastOptions from '../utils/ToastOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SetAvatar = () => {\n  _s();\n\n  const api = \"https://api.multiavatar.com/45678945\";\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n\n  const setProfilePicture = async () => {};\n\n  useEffect(async () => {\n    const data = [];\n\n    for (let i = 0; i < 4; i++) {\n      const image = await axios.get(`${api}/${Math.random() * 1000}`);\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString(\"base64\"));\n    }\n\n    setAvatars(data);\n    setIsLoading(false);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick an avatar as your profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: avatars.map((avatar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/svg+xml;base64,${avatar}`,\n            alt: \"Avatar\",\n            onClick: () => setSelectedAvatar(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SetAvatar, \"Vf3bLGWNS+p8++1hLS4MtcrCzCs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SetAvatar;\nexport default SetAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetAvatar\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Loader","ToastContainer","toast","SetAvatarRoute","Container","axios","toastOptions","SetAvatar","api","navigate","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","setProfilePicture","data","i","image","get","Math","random","buffer","Buffer","push","toString","map","avatar","index"],"sources":["C:/Users/Walid/Documents/Real time chat application using MERN stack/chat-app/src/pages/SetAvatar.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Loader from '../assets/Loader.gif';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { SetAvatarRoute } from '../utils/APIRoutes';\r\nimport Container from '../styled-components/Container';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport toastOptions from '../utils/ToastOptions';\r\n\r\n\r\nconst SetAvatar = () => {\r\n\r\n    const api = \"https://api.multiavatar.com/45678945\";\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [avatars, setAvatars] = useState([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const [selectedAvatar, setSelectedAvatar] = useState(undefined);\r\n\r\n    const setProfilePicture = async () => { };\r\n\r\n    useEffect(async () => {\r\n        const data = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const image = await axios.get(\r\n                `${api}/${Math.random() * 1000}`\r\n            );\r\n            const buffer = new Buffer(image.data);\r\n            data.push(buffer.toString(\"base64\"));\r\n        }\r\n        setAvatars(data);\r\n        setIsLoading(false);\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <div>\r\n                    <h1>\r\n                        Pick an avatar as your profile picture\r\n                    </h1>\r\n                </div>\r\n                <div className=\"avatars\">\r\n                    {\r\n                        avatars.map((avatar, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className={`avatar ${selectedAvatar === index ? \"selected\" : \"\"}`}\r\n                            >\r\n                                <img\r\n                                    src={`data:image/svg+xml;base64,${avatar}`}\r\n                                    alt=\"Avatar\"\r\n                                    onClick={() => setSelectedAvatar(index)}\r\n                                />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </Container>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SetAvatar;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAO,uCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;;;AAGA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAMC,GAAG,GAAG,sCAAZ;EAEA,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EAEA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;EAEA,MAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;EAEA,MAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAACkB,SAAD,CAApD;;EAEA,MAAMC,iBAAiB,GAAG,YAAY,CAAG,CAAzC;;EAEApB,SAAS,CAAC,YAAY;IAClB,MAAMqB,IAAI,GAAG,EAAb;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MACxB,MAAMC,KAAK,GAAG,MAAMf,KAAK,CAACgB,GAAN,CACf,GAAEb,GAAI,IAAGc,IAAI,CAACC,MAAL,KAAgB,IAAK,EADf,CAApB;MAGA,MAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAWL,KAAK,CAACF,IAAjB,CAAf;MACAA,IAAI,CAACQ,IAAL,CAAUF,MAAM,CAACG,QAAP,CAAgB,QAAhB,CAAV;IACH;;IACDhB,UAAU,CAACO,IAAD,CAAV;IACAL,YAAY,CAAC,KAAD,CAAZ;EACH,CAXQ,CAAT;EAaA,oBACI;IAAA,wBACI,QAAC,SAAD;MAAA,wBACI;QAAA,uBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAMI;QAAK,SAAS,EAAC,SAAf;QAAA,UAEQH,OAAO,CAACkB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACR;UAEI,SAAS,EAAG,UAAShB,cAAc,KAAKgB,KAAnB,GAA2B,UAA3B,GAAwC,EAAG,EAFpE;UAAA,uBAII;YACI,GAAG,EAAG,6BAA4BD,MAAO,EAD7C;YAEI,GAAG,EAAC,QAFR;YAGI,OAAO,EAAE,MAAMd,iBAAiB,CAACe,KAAD;UAHpC;YAAA;YAAA;YAAA;UAAA;QAJJ,GACSA,KADT;UAAA;UAAA;UAAA;QAAA,QADJ;MAFR;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAwBI,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA,QAxBJ;EAAA,gBADJ;AA4BH,CAvDD;;GAAMvB,S;UAIeR,W;;;KAJfQ,S;AAyDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}