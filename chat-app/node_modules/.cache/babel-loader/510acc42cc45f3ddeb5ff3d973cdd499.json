{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Walid/Documents/Real time chat application using MERN stack/chat-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/Users/Walid/Documents/Real time chat application using MERN stack/chat-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Walid/Documents/Real time chat application using MERN stack/chat-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Walid/Documents/Real time chat application using MERN stack/chat-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useRef}from'react';import MessagingContainer from'../styled-components/MessagingContainer';import ChatInput from'./ChatInput';import Logout from'./Logout';import Messages from'./Messages';import axios from'axios';import{getAllMessagesRoute,sendMessageRoute}from'../utils/APIRoutes';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Messaging=function Messaging(_ref){var currentChat=_ref.currentChat,currentUser=_ref.currentUser,socket=_ref.socket;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),arrivalMessage=_useState4[0],setArrivalMessage=_useState4[1];var scrollRef=useRef();useEffect(function(){var getAllMessages=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(getAllMessagesRoute,{from:currentUser._id,to:currentChat._id});case 2:response=_context.sent;_context.t0=setMessages;_context.next=6;return response.data;case 6:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 8:case\"end\":return _context.stop();}}},_callee);}));return function getAllMessages(){return _ref2.apply(this,arguments);};}();getAllMessages();},[currentChat]);var handleSendMsg=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(msg){var msgs;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.post(sendMessageRoute,{from:currentUser._id,to:currentChat._id,message:msg});case 2:socket.current.emit('send-msg',{to:currentChat._id,from:currentUser._id,message:msg});msgs=_toConsumableArray(messages);msgs.push({fromSelf:true,message:msg});setMessages(msgs);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSendMsg(_x){return _ref3.apply(this,arguments);};}();useEffect(function(){if(socket.current){socket.current.on('msg-receive',function(msg){console.log(msg);setArrivalMessage({fromSelf:false,message:msg});});}},[]);useEffect(function(){arrivalMessage&&setMessages(function(prev){return[].concat(_toConsumableArray(prev),[arrivalMessage]);});},[arrivalMessage]);useEffect(function(){var _scrollRef$current;(_scrollRef$current=scrollRef.current)===null||_scrollRef$current===void 0?void 0:_scrollRef$current.scrollIntoView({behaviour:'smooth'});},[messages]);return/*#__PURE__*/_jsxs(MessagingContainer,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:\"data:image/svg+xml;base64,\".concat(currentChat.avatarImage),alt:\"Avatar\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"username\",children:/*#__PURE__*/_jsx(\"h3\",{children:currentChat.username})})]}),/*#__PURE__*/_jsx(Logout,{})]}),/*#__PURE__*/_jsx(Messages,{messages:messages,scrollRef:scrollRef}),/*#__PURE__*/_jsx(ChatInput,{handleSendMsg:handleSendMsg})]});};export default Messaging;","map":{"version":3,"names":["useState","useEffect","useRef","MessagingContainer","ChatInput","Logout","Messages","axios","getAllMessagesRoute","sendMessageRoute","Messaging","currentChat","currentUser","socket","messages","setMessages","arrivalMessage","setArrivalMessage","scrollRef","getAllMessages","post","from","_id","to","response","data","handleSendMsg","msg","message","current","emit","msgs","push","fromSelf","on","console","log","prev","scrollIntoView","behaviour","avatarImage","username"],"sources":["C:/Users/Walid/Documents/Real time chat application using MERN stack/chat-app/src/components/Messaging.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport MessagingContainer from '../styled-components/MessagingContainer';\r\nimport ChatInput from './ChatInput';\r\nimport Logout from './Logout';\r\nimport Messages from './Messages';\r\nimport axios from 'axios';\r\nimport { getAllMessagesRoute, sendMessageRoute } from '../utils/APIRoutes';\r\n\r\n\r\nconst Messaging = ({ currentChat, currentUser, socket }) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n\r\n    const scrollRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const getAllMessages = async () => {\r\n            const response = await axios.post(getAllMessagesRoute, {\r\n                from: currentUser._id,\r\n                to: currentChat._id,\r\n            });\r\n            setMessages(await response.data);\r\n        };\r\n        getAllMessages();\r\n    }, [currentChat]);\r\n\r\n    const handleSendMsg = async msg => {\r\n        await axios.post(sendMessageRoute, {\r\n            from: currentUser._id,\r\n            to: currentChat._id,\r\n            message: msg,\r\n        });\r\n        socket.current.emit('send-msg', {\r\n            to: currentChat._id,\r\n            from: currentUser._id,\r\n            message: msg,\r\n        });\r\n\r\n        const msgs = [...messages];\r\n        msgs.push({\r\n            fromSelf: true,\r\n            message: msg,\r\n        });\r\n        setMessages(msgs);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (socket.current) {\r\n            socket.current.on('msg-receive', msg => {\r\n                console.log(msg);\r\n                setArrivalMessage({\r\n                    fromSelf: false,\r\n                    message: msg,\r\n                });\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\r\n    }, [arrivalMessage]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({\r\n            behaviour: 'smooth',\r\n\r\n        })\r\n    }, [messages]);\r\n\r\n    return (\r\n        <MessagingContainer>\r\n            <div className='chat-header'>\r\n                <div className='user-details'>\r\n                    <div className='avatar'>\r\n                        <img\r\n                            src={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\r\n                            alt=\"Avatar\"\r\n                        />\r\n                    </div>\r\n                    <div className='username'>\r\n                        <h3>\r\n                            {currentChat.username}\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n                <Logout />\r\n            </div>\r\n            <Messages\r\n                messages={messages}\r\n                scrollRef={scrollRef}\r\n            />\r\n            <ChatInput handleSendMsg={handleSendMsg} />\r\n        </MessagingContainer>\r\n    );\r\n};\r\n\r\n\r\nexport default Messaging;"],"mappings":"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"},"metadata":{},"sourceType":"module"}