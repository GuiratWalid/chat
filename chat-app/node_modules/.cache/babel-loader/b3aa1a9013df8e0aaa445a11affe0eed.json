{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Walid\\\\Documents\\\\Real time chat application using MERN stack\\\\chat-app\\\\src\\\\components\\\\Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Logo from '../assets/Logo.png';\nimport ContactsContainer from '../styled-components/ContactsContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contacts = _ref => {\n  _s();\n\n  let {\n    contacts,\n    currentUser\n  } = _ref;\n  const [user, setUser] = useState({\n    username: undefined,\n    image: undefined,\n    selected: undefined\n  });\n  useEffect(() => {\n    if (currentUser) setUser({\n      username: currentUser.username,\n      image: currentUser.avatarImage,\n      ...user\n    });\n  }, [currentUser]);\n\n  const changeCurrentChat = (index, contact) => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.username && user.image && /*#__PURE__*/_jsxDEV(ContactsContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0627\\u0644\\u0623\\u0635\\u062F\\u0642\\u0627\\u0621\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contacts\",\n          children: contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `contact ${index === user.selected}?'selected':''`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/svg+xml;base64,${contact.avatar}`,\n                alt: \"Avatar\" // onClick={() => setSelectedAvatar(index)}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 45\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n};\n\n_s(Contacts, \"z/DyvfOCTjGWKIwyDqTAWeY4IjA=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["useState","useEffect","Logo","ContactsContainer","Contacts","contacts","currentUser","user","setUser","username","undefined","image","selected","avatarImage","changeCurrentChat","index","contact","map","avatar"],"sources":["C:/Users/Walid/Documents/Real time chat application using MERN stack/chat-app/src/components/Contacts.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Logo from '../assets/Logo.png';\r\nimport ContactsContainer from '../styled-components/ContactsContainer';\r\n\r\n\r\nconst Contacts = ({ contacts, currentUser }) => {\r\n\r\n    const [user, setUser] = useState({\r\n        username: undefined,\r\n        image: undefined,\r\n        selected: undefined,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (currentUser)\r\n            setUser({\r\n                username: currentUser.username,\r\n                image: currentUser.avatarImage,\r\n                ...user,\r\n            });\r\n    }, [currentUser]);\r\n\r\n    const changeCurrentChat = (index, contact) => {\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                user.username && user.image && (\r\n                    <ContactsContainer>\r\n                        <div className='brand'>\r\n                            <img\r\n                                src={Logo}\r\n                                alt=\"Logo\"\r\n                            />\r\n                            <h3>\r\n                                الأصدقاء\r\n                            </h3>\r\n                            <div className='contacts'>\r\n                                {\r\n                                    contacts.map((contact, index) => (\r\n                                        <div\r\n                                            key={index}\r\n                                            className={`contact ${index === user.selected}?'selected':''`}\r\n                                        >\r\n                                            <div className='avatar'>\r\n                                                <img\r\n                                                    src={`data:image/svg+xml;base64,${contact.avatar}`}\r\n                                                    alt=\"Avatar\"\r\n                                                // onClick={() => setSelectedAvatar(index)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </ContactsContainer>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Contacts;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;;;;AAGA,MAAMC,QAAQ,GAAG,QAA+B;EAAA;;EAAA,IAA9B;IAAEC,QAAF;IAAYC;EAAZ,CAA8B;EAE5C,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;IAC7BS,QAAQ,EAAEC,SADmB;IAE7BC,KAAK,EAAED,SAFsB;IAG7BE,QAAQ,EAAEF;EAHmB,CAAD,CAAhC;EAMAT,SAAS,CAAC,MAAM;IACZ,IAAIK,WAAJ,EACIE,OAAO,CAAC;MACJC,QAAQ,EAAEH,WAAW,CAACG,QADlB;MAEJE,KAAK,EAAEL,WAAW,CAACO,WAFf;MAGJ,GAAGN;IAHC,CAAD,CAAP;EAKP,CAPQ,EAON,CAACD,WAAD,CAPM,CAAT;;EASA,MAAMQ,iBAAiB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB,CAE7C,CAFD;;EAIA,oBACI;IAAA,UAEQT,IAAI,CAACE,QAAL,IAAiBF,IAAI,CAACI,KAAtB,iBACI,QAAC,iBAAD;MAAA,uBACI;QAAK,SAAS,EAAC,OAAf;QAAA,wBACI;UACI,GAAG,EAAET,IADT;UAEI,GAAG,EAAC;QAFR;UAAA;UAAA;UAAA;QAAA,QADJ,eAKI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ,eAQI;UAAK,SAAS,EAAC,UAAf;UAAA,UAEQG,QAAQ,CAACY,GAAT,CAAa,CAACD,OAAD,EAAUD,KAAV,kBACT;YAEI,SAAS,EAAG,WAAUA,KAAK,KAAKR,IAAI,CAACK,QAAS,gBAFlD;YAAA,uBAII;cAAK,SAAS,EAAC,QAAf;cAAA,uBACI;gBACI,GAAG,EAAG,6BAA4BI,OAAO,CAACE,MAAO,EADrD;gBAEI,GAAG,EAAC,QAFR,CAGA;;cAHA;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA;UAJJ,GACSH,KADT;YAAA;YAAA;YAAA;UAAA,QADJ;QAFR;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAHZ,iBADJ;AAqCH,CA1DD;;GAAMX,Q;;KAAAA,Q;AA4DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}